(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{473:function(e,v,r){"use strict";r.r(v);var t=r(4),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,r=e._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"springmvc技术总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc技术总结"}},[e._v("#")]),e._v(" SpringMVC技术总结")]),e._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("h3",{attrs:{id:"什么是springmvc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是springmvc"}},[e._v("#")]),e._v(" 什么是SpringMVC")]),e._v(" "),r("p",[e._v("SpringMVC是一个基于Java实现的MVC模式的轻量级web框架，通过把模型-视图-控制器分离，将web层进行职责解耦，把复杂的web应用分成逻辑清晰的几部分，简化开发，减少出错，方便组内开发人员之间的协作。")]),e._v(" "),r("h3",{attrs:{id:"springmvc的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的优点"}},[e._v("#")]),e._v(" SpringMVC的优点")]),e._v(" "),r("ol",[r("li",[e._v("可以支持各种视图技术，并不仅仅是JSP")]),e._v(" "),r("li",[e._v("与Spring框架集成")]),e._v(" "),r("li",[e._v("清晰的角色分配：前端控制器（DispatcherServlet）,请求到处理器映射（handleMapping），处理器适配器（HandleAdapter）,视图解析器（ViewResolver）")]),e._v(" "),r("li",[e._v("支持各种请求资源的策略映射")])]),e._v(" "),r("h2",{attrs:{id:"核心组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#核心组件"}},[e._v("#")]),e._v(" 核心组件")]),e._v(" "),r("h3",{attrs:{id:"sprigmvc的主要组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sprigmvc的主要组件"}},[e._v("#")]),e._v(" SprigMVC的主要组件")]),e._v(" "),r("ol",[r("li",[e._v("前端控制器（DispatcherServlet）")])]),e._v(" "),r("p",[e._v("接收请求，响应结果，相当于转发器，有了DispatcherServlet可以减少其他组件之间的耦合度。")]),e._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[e._v("handleMapping")])]),e._v(" "),r("p",[e._v("用于查找对应的handle")]),e._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[e._v("handleAdapter")])]),e._v(" "),r("p",[e._v("执行对应的handler并返回modelAndView")]),e._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[e._v("handle")])]),e._v(" "),r("p",[e._v("执行对应的业务逻辑，返回modelAndView")]),e._v(" "),r("ol",{attrs:{start:"5"}},[r("li",[e._v("viewReslover")])]),e._v(" "),r("p",[e._v("对视图进行解析，根据视图名解析成真正的view")]),e._v(" "),r("ol",{attrs:{start:"6"}},[r("li",[e._v("view")])]),e._v(" "),r("p",[e._v("view是一个接口，它的实现类支持不同类型的视图（jsp，freemarker，pdf）")]),e._v(" "),r("h3",{attrs:{id:"springmvc工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc工作流程"}},[e._v("#")]),e._v(" SpringMVC工作流程")]),e._v(" "),r("ol",[r("li",[e._v("用户发送请求到DispatcherServlet")]),e._v(" "),r("li",[e._v("DispatcherServlet根据请求调用对应的handleMapping，请求获取handle")]),e._v(" "),r("li",[e._v("handleMapping根据url找到具体的handle，生成处理器对象和拦截器规则（如果有）一并返回给DispatcherServlet")]),e._v(" "),r("li",[e._v("DispatcherServlet调用handleAdapter")]),e._v(" "),r("li",[e._v("handleAdapter调用对应的handle进行处理，")]),e._v(" "),r("li",[e._v("handle执行完返回modelAndView")]),e._v(" "),r("li",[e._v("handleAdapter将handle返回的modelAndView返回给 DispatcherServlet")]),e._v(" "),r("li",[e._v("DispatcherServlet调用viewReslover对modelAndView进行解析")]),e._v(" "),r("li",[e._v("viewReslover将解析好的view返回给 DispatcherServlet")]),e._v(" "),r("li",[e._v("DispatcherServlet调用view进行对应数据的渲染")]),e._v(" "),r("li",[e._v("view将渲染好的视图返回给 DispatcherServlet")]),e._v(" "),r("li",[e._v("DispatcherServlet将渲染好的数据返回给用户")])])])}),[],!1,null,null,null);v.default=a.exports}}]);